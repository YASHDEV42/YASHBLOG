generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESV2_POSTGRES_URL_NON_POOLING")
}

model User {
  id    String  @id @default(uuid())
  email String  @unique
  name  String?
  posts Post[]
  likes LikedPosts[]
  comments Comment[]
}

model Post {
  id          String         @id @default(uuid())
  title       String
  content     String
  excerpt     String
  slug        String         @unique
  published   Boolean        @default(false)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  metadataId  String?
  metadata    PostMetadata?
  authorId    String
  author      User           @relation(fields: [authorId], references: [id])
  categories  CategoryToPost[]  @relation("PostToCategory")
  tags   PostToTag[]   @relation("PostToTag")
  likes       LikedPosts[]
  comments    Comment[]
}

model PostMetadata {
  id        String   @id @default(uuid())
  views     Int
  likes     Int
  createdAt DateTime @default(now())
  postId    String   @unique
  post      Post     @relation(fields: [postId], references: [id])
}
model Category {
  id        String   @id @default(uuid())
  name      String
  slug      String   @unique
  createdAt DateTime @default(now())
  posts     CategoryToPost[]  @relation("PostToCategory")
}

model Tag {
  id        String   @id @default(uuid())
  name      String
  slug      String   @unique
  createdAt DateTime @default(now())
  posts  PostToTag[]   @relation("PostToTag")
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  postId    String
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model LikedPosts {
  postId String
  userId String
  post   Post  @relation(fields: [postId], references: [id])
  user   User  @relation(fields: [userId], references: [id])

  @@id([postId, userId])
}

model CategoryToPost {
  A         String
  B         String
  post      Post      @relation(fields: [A], references: [id], name: "PostToCategory")
  category  Category  @relation(fields: [B], references: [id], name: "PostToCategory")

  @@id([A, B])
}
model PostToTag {
  A     String
  B     String
  post  Post  @relation(fields: [A], references: [id], name: "PostToTag")
  tag   Tag   @relation(fields: [B], references: [id], name: "PostToTag")

  @@id([A, B])
}